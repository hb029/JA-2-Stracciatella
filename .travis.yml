language: cpp
os: linux

jobs:
  include:
    - name: Linux x64
      dist: xenial

    - name: Mingw x64 (cross compile)
      dist: xenial
      env:
        TRAVIS_MINGW=true

    - name: Mac
      os: osx

    - name: Coverity scan
      dist: xenial
      branches:
        only:
          - nightly
      addons:
        # must copy apt
        apt:
          packages:
            - cmake
            - make
            - g++
            - libsdl2-dev
            - fluid
            - libfltk1.3-dev
            - libfltk-images1.3
            - fakeroot
        coverity_scan:
          project:
            name: ja2-stracciatella/ja2-stracciatella
            description: Build submitted via Travis CI
          notification_email: github@stefanlau.com
          build_command_prepend: mkdir coverage-build && cd coverage-build && cmake $BUILD_SWITCHES ..
          build_command: make
          branch_pattern: nightly
      # must replace scripts (before_install is left unchanged)
      script:
        - head -150 "${TRAVIS_BUILD_DIR}/coverage-build/cov-int/build-log.txt" || true
        - tail -150 "${TRAVIS_BUILD_DIR}/coverage-build/cov-int/build-log.txt" || true
        - cat "${TRAVIS_BUILD_DIR}/coverage-build/cov-int/scm_log.txt" || true
      after_success: true

branches:
  only:
    - master
    - nightly
    - /^v\d+.\d+(.\d+)?(-\S*)?$/

before_install:
  - export PUBLISH_BINARY="false"
  - export BUILD_SWITCHES=""
  - export BUILD_TYPE="Debug";

  - export CI_REF="refs/heads/$TRAVIS_BRANCH"
  - if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
      export PUBLISH_BINARY="true";
      export PUBLISH_DIR="pull-requests/$TRAVIS_PULL_REQUEST/";
      export VERSION_TAG="${TRAVIS_PULL_REQUEST}pullrequest";
      export CI_REF="refs/pull/${TRAVIS_PULL_REQUEST}";
    fi
  - if [[ "$TRAVIS_BRANCH" = "nightly" ]]; then
      export BUILD_TYPE="Release";
      export PUBLISH_BINARY="true";
      export PUBLISH_DIR="nightlies/";
      export VERSION_TAG="$(date +%Y%m%d)";
    fi
  - if [[ "$TRAVIS_TAG" != "" ]]; then
      export BUILD_TYPE="Release";
      export PUBLISH_BINARY="true";
      export PUBLISH_DIR="releases/$TRAVIS_TAG/";
      export VERSION_TAG="";
      export CI_REF="refs/tags/$TRAVIS_TAG";
    fi

  - export BUILD_SWITCHES="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DVERSION_TAG=$VERSION_TAG"
  - if [ "$PUBLISH_BINARY" == "true" ] && [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_MINGW" != "true" ]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DCMAKE_INSTALL_PREFIX=/usr -DEXTRA_DATA_DIR=/usr/share/ja2";
    fi
  - if [ "$PUBLISH_BINARY" == "true" ] && [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_MINGW" == "true" ]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DCMAKE_TOOLCHAIN_FILE=./cmake/toolchain-mingw.cmake -DCPACK_GENERATOR=ZIP";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DCMAKE_TOOLCHAIN_FILE=./cmake/toolchain-macos.cmake -DCPACK_GENERATOR=Bundle";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [ "$TRAVIS_MINGW" != "true" ]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DCPACK_GENERATOR=DEB";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [ "$TRAVIS_MINGW" == "true" ]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DCMAKE_TOOLCHAIN_FILE=./cmake/toolchain-mingw.cmake -DCPACK_GENERATOR=ZIP";
    fi
  - if [[ "$BUILD_TYPE" == "Release" ]]; then
      export BUILD_SWITCHES="$BUILD_SWITCHES -DWITH_EDITOR_SLF=ON";
    fi
  - echo "$PUBLISH_BINARY"
  - echo "$PUBLISH_DIR"
  - echo "$BUILD_SWITCHES"

  - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$(cat ./rust-toolchain) -y
  - export PATH=$PATH:$HOME/.cargo/bin
  - if [[ "$TRAVIS_MINGW" == "true" ]]; then
      rustup target add x86_64-pc-windows-gnu;
    fi
  - rustup component add rustfmt
  - rustup component add clippy
  
  # Google Cloud SDK for Artifact Upload
  - export CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - curl https://sdk.cloud.google.com | bash
  - source $HOME/google-cloud-sdk/path.bash.inc

  - cargo -V
  - rustc -V
  - cargo fmt -- -V
  - cargo clippy -- -V
  - cmake --version
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      fakeroot -v;
    fi
  - gcloud version

script:
  - mkdir ci-build && cd ci-build
  - cmake $BUILD_SWITCHES ..;
  - make
  - if [ "$PUBLISH_BINARY" == "true" ] && [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_MINGW" != "true" ]; then
      sudo make install;
    fi
  - make cargo-fmt-check;
  - if [ "$TRAVIS_MINGW" != "true" ]; then
      make cargo-clippy;
    fi
  - if [ "$TRAVIS_MINGW" != "true" ]; then
      make cargo-test;
    fi
  - if [ "$TRAVIS_MINGW" != "true" ]; then
      ./ja2 -unittests && ./ja2-launcher -help;
    fi
  - if [ "$PUBLISH_BINARY" == "true" ] && [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_MINGW" != "true" ]; then
      sudo make uninstall;
    fi
  - if [ "$PUBLISH_BINARY" == "true" ]; then
      make package;
    fi

after_success:
  - cd ..
  - .ci/ci-publish.sh

addons:
  apt:
    packages:
    - cmake
    - make
    - g++
    - libsdl2-dev
    - fluid
    - libfltk1.3-dev
    - libfltk-images1.3
    - fakeroot
    - mingw-w64

env:
  global:
    - secure: "o8hCOxRt+3jpgLHEQgvHSSY5eIAq+yrAprSaOYZ5YZcj0Xztcu/oCbxZ3l9t6arY91yqHDjzyuSJMrLrGigjYIR/Bp26Du9o1MA/j+FmP2I8Uwn1lyBI1hyZtX5Viuktpkcpdfiv52ISbFPnHmJ0JjgsbLqqnGw8Ps2zoYrFlI284d9FxPZJfjt8pzZLBAB77zE0rMKGO1ITRV6FJbG2Wjh5A165gx4yM3UszyA01jVR/ifFItdGfSzJB3UXroFjzxL7TNP9WgQjBEcmup6y7E90PztFGFBVwvBnEHMWwb4Wr8NuFmhMRXbOb5ilw7rwXeeeKBQ2pAShY0A4N5k6Ah6oJcR7+I59eSscnjq0gJVmLkRPUij6RQtL+WgSFQ4EssyTONOelQhEPV4NU5jUleTHES5mFVy8Ndz4gULb9aX/uXRp2aV0fpqDcNnpdZJO1M3upCNxC9X9U3jmQC6MgDElaoyBb4IC1+XDOBq2XbTpLn58IbZUr975S/EIMENXhUl58FohhwuhQMyYqz/C+/A8lOvDQ0v3eOVIqdOgxNuxlAUs3DJAai8xDDVUfYUizcwKNFGo96aD2+eJQ9GeQ1P0uHIzP+BmQidFaZZIVmbEyjVRN8xKIA6TQKQLL0eStm/FHkjMMu3MrfvuDJcJmxcoQQWCFWHKSLGaHLI6xHc="
    - secure: "hGKZH6OhE4695iUBAOIUI1j6ZySnsBr/vMMLP3yEgOgEcpV4uHZd7ksEDMQ3O7sbc3YGA0a5dBZZmBktJF7FWYazcy7X7G2UTDNuigYdEcsD46XqJ+f9c91QofOsyvg2OFFU98ORJ7Q2l6a7aemdM/UAwEiM1MV65TMkPZURwEGD6iXI7JtbZI0llfHeXhccksqrO/GUH8VyfYn0LA71dagxzcGHThndCTqizqxtkiI0bUquXErt4w09faie2gB0pwRBSZvlYMHaqcsoC8WcGy5upUPxIX5hfpGrHMwpcHH2S3k6OWNYhILFYqfR/2p4zlnzwXC27YETMO9XOGVjZegePkRRR1iurW5KtVVy8a7Ap/CmS3VC99yvGIRMDJIgSLQku8GC4GRSNjPUXvhP0Sf6NEN5xCyy/zlD3KGJelBXjoGzlhFRUIqamo7ahrnIjtO0op2Z7EOcfNP5146EJnMTA1Nk07x5y9TSdveLvbFziI3ak6VSF+prffwoET5AOYddUNlWdjdtEEK/m/kKYyUa1dlgFVzBwwcpfSD3aJbKtwLAeQf3gUDrHX/WQD1srT2vnt8Zk4c+mTPn3l7Qt/ygot2NFKTnxW7sjD/rdVYDHh99M3I/lCI16TFt7GnJ7/DPqf8vqOld6ubfu/+ExdkFvVFfoYTDpNgXyDEyCWM="
    - secure: "aCkkzCZe/Vm5eaL/Rg+CPeBVS5/WeAFmgIY/RueI61tj2WnjrgoE58hftOcg7oIptdz2heQTEB16aUpt6W+wqGKRSGKeo8G/y/Q08WNLcVgomDvfT6snQKm/LVcxc6a9sN7HZgWGdfkHVUP3tA/wTO2w/nKKIrMu3PmeSMkCJlM6CV8TQO/daOfJMUWkIImrzBO5E2lK11a/G4w/RxS0BKhnR6F/VEfvAkh/CDV/BK8Fpeiowk3bvIMA8Bc/Ect03A5mf2y17E9uFI2KEk77cll/bAp/GlwiE0YEjBfY0q6agHREHL605CGAQUkYGrZCrP6gGX/X/b7hjcCaOTV5DdoDCXiceINMxb2x/cKPyMTP5vAHpy+3PnZM2P18UzYwPmo8+3BCE5fhNBJ3xeFK9HkzjCbfW5REMcQ5bY1a+Yc5Alf4dNe+Q5b0hLBPtgm9cgxIXft6fIRBTS9xV9bHWgiEySgCpfPNAE9jqyb+gpoXtPLowVbuc2WsGW1XpUXvbGyCsyFQX0mAoH8SbfInJd6oAwS3Dg8/Ver6X1NjBzFvqI6xHxR+Io8TQ3P5PF30k17X8FitgDOZ/9VvnA9wi8/pxc8zV+2qQF//3UX6KKcxDKAFlIugLOknssof1p4pWcRPI8nhXB5m0ce//bX5To1FwJrEs5ryNfQTQBnr1Ow="
    - secure: "HD3qkt4Ks2npe2OW5QU3S7UD1/4EoaVrOpT/vJZSmeIyfja/bBFV3X6YF0WhfFjTxLZ40FTUAnJKRuNN6+Ik2KbQzL/YPsuxzD3yZvZOlLy/ue7TqKhpZ/Zo7Q1SghVDFusaukm5VVjsjmj9u7nktiOBE4cI3hjqlVKSKDTfpyFZXM0q2pC4e+LlRfE+JoEdVEE2j+VDZWUVT+fidvZd5SixMjJ6n2GHwnZLdIcnzjTcvjoUBCNqqMQJKOgLlzMFnfn/ZT2uk5xQ6ePUKvJBgCit2onVfl5gsrCntlVEfDhm83D+7UaAyloTYUzz8jZ5V5DapJDIBf5afrtUkEzR8Bu44vHXMtZRvSYPWHPx45YgrDiRqSoZr8m3hEpzeemxtn5pWi0tDSZGSFaDz18UpIasyGgedVm/kS3c1XoMsIAn653AylVvWfq/Tp4Zc7OcDHiWVQRQAsHj0KOZ8uN9u6GQLa+7bnpHoTra5HYvAnQ4UqmBpR3mRUX2GfWlZpgOgmZdXQ4WRTIqsRkdfTvduhHIwPWBmc44ZNnd6Q6tlsNem4Fd9jiI1WFBoC/ChxgrGUUVW79WYSsQzx/wZXUHUKWX8ctzI4h5RDR8v5vR9yMk7Ngwz2IXt4qEASTWpqTwdQpeuapHsTXsAFKXmOKvJjpIWdlcA3f9/3en/LS7zFs="
